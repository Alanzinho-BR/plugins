package br.com.piracraft.lobby2;

import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.plugin.Plugin;
import org.bukkit.plugin.PluginManager;
import org.bukkit.plugin.java.JavaPlugin;

import br.com.piracraft.lobby2.event.AntiAfkSystem;
import br.com.piracraft.lobby2.event.BlockManager;
import br.com.piracraft.lobby2.event.GameManager;
import br.com.piracraft.lobby2.event.PlayerManager;
import br.com.piracraft.lobby2.menu.KitPvPMenu;
import br.com.piracraft.lobby2.menu.LobbyMenu;
import br.com.piracraft.lobby2.menu.MenuUpdater;
import br.com.piracraft.lobby2.menu.SkywarsMenu;
import br.com.piracraft.lobby2.utils.LobbyAPI;

public class Main extends JavaPlugin {

	private static Plugin plugin;
	private static long menuUpdateTime = 5*60*20;

	@Override
	public void onEnable() {
		setPlugin(this);
		getServer().getMessenger().registerOutgoingPluginChannel(this,
				"BungeeCord");
		PluginManager pm = getServer().getPluginManager();
		AntiAfkSystem afk = new AntiAfkSystem();
		afk.runTaskTimer(this, 20, 20);
		pm.registerEvents(afk, this);
		pm.registerEvents(new PlayerManager(), this);
		pm.registerEvents(new GameManager(), this);
		pm.registerEvents(new BlockManager(), this);
		pm.registerEvents(new KitPvPMenu(), this);
		pm.registerEvents(new SkywarsMenu(), this);
		pm.registerEvents(new LobbyMenu(), this);
		LobbyAPI.setarLobby();
		new MenuUpdater().runTaskTimer(this, menuUpdateTime, menuUpdateTime);
		
	}

	@Override
	public void onDisable() {
		
		
	}
	public static Plugin getPlugin() {
		return plugin;
	}

	public static void setPlugin(Plugin plugin) {
		Main.plugin = plugin;
	}

	@Override
	public boolean onCommand(CommandSender sender, Command cmd, String lb,
			String[] args) {
		if (cmd.getName().equalsIgnoreCase("npcs")) {
			if (sender instanceof Player) {
				Player p = (Player) sender;
				if (!p.isOp())
					return true;
			}
			if (args.length == 0) {
				sender.sendMessage("§cUse: §f/npcs §7<spawnar, remover>");
				return true;
			}
			if (args.length == 1) {
				if (args[0].equalsIgnoreCase("spawnar")) {
					LobbyAPI.spawnNpcs();
					sender.sendMessage("§aNPCs Spawnados");
				}
				if (args[0].equalsIgnoreCase("remover")) {
					LobbyAPI.removeNpcs();
					sender.sendMessage("§aNPCs Removidos");
				}
			}
		}
		return false;
	}

}
