package br.com.piracraft.lobby2;

import java.util.HashMap;

import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.plugin.Plugin;
import org.bukkit.plugin.PluginManager;
import org.bukkit.plugin.java.JavaPlugin;

import br.com.piracraft.lobby2.listeners.AntiAfkListener;
import br.com.piracraft.lobby2.menus.ClicarKitpvp;
import br.com.piracraft.lobby2.menus.ClicarMenu;
import br.com.piracraft.lobby2.menus.ClicarSkyWars;
import br.com.piracraft.lobby2.menus.MenuKitpvp;
import br.com.piracraft.lobby2.menus.MenuMenu;
import br.com.piracraft.lobby2.menus.MenuSkyWars;
import br.com.piracraft.lobby2.npc.InteragirNPC;
import br.com.piracraft.lobby2.npc.NPCs;
import br.com.piracraft.lobby2.utils.FailAPI.MySQLNPC;
import br.com.piracraft.lobby2.utils.FailAPI.NPC;

public class Main extends JavaPlugin {

	private static Plugin plugin;
	public static HashMap<NPC, MySQLNPC> npc = new HashMap<>();

	@Override
	public void onEnable() {
		setPlugin(this);
		getServer().getMessenger().registerOutgoingPluginChannel(this,
				"BungeeCord");
		PluginManager pm = getServer().getPluginManager();
		AntiAfkListener afk = new AntiAfkListener();
		afk.runTaskTimer(this, 20, 20);
		pm.registerEvents(afk, this);

		pm.registerEvents(new ClicarSkyWars(), this);
		pm.registerEvents(new ClicarKitpvp(), this);
		pm.registerEvents(new ClicarMenu(), this);
		pm.registerEvents(new InteragirNPC(), this);
		new MenuSkyWars(null).setarItens();
		new MenuKitpvp(null).setarItens();
		new MenuMenu(null).setarItens();
	}

	@Override
	public void onDisable() {
	}
	public static Plugin getPlugin() {
		return plugin;
	}

	public static void setPlugin(Plugin plugin) {
		Main.plugin = plugin;
	}

	@Override
	public boolean onCommand(CommandSender sender, Command cmd, String lb,
			String[] args) {
		if (cmd.getName().equalsIgnoreCase("npcs")) {
			if (sender instanceof Player) {
				Player p = (Player) sender;
				if (!p.isOp())
					return true;
			}
			if (args.length == 0) {
				sender.sendMessage("§cUse: §f/npcs §7<spawnar, remover>");
				return true;
			}
			if (args.length == 1) {
				if (args[0].equalsIgnoreCase("spawnar")) {
					NPCs.spawn();
					sender.sendMessage("§aNPCs Spawnados");
				}
				if (args[0].equalsIgnoreCase("remover")) {
					NPCs.remove();
					sender.sendMessage("§aNPCs Removidos");
				}
			}
		}
		return false;
	}

}
